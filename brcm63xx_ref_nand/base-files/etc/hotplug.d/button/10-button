#!/bin/sh

. /usr/share/libubox/jshn.sh

case "$ACTION" in
        add|register)
        [ "resetbutton" == "$INTERFACE" ] && {
                ubus call leds set '{ "state": "test"}'
                printf "\n\n*** Restore to default settings ***\n\n" > /dev/console
                mtd_overlay=$(grep "\"rootfs_data\"" /proc/mtd | awk -F: '{print $1}')
                if [ "$(cat /sys/devices/virtual/mtd/$mtd_overlay/type)" == "nand" ]; then

                                mtd -m -b -r erase rootfs_data 2>/dev/null
                else
                                mtd -r erase rootfs_data 2>/dev/null
                fi
        }
        [ "ecobutton" == "$INTERFACE" ] && {
                [ "$(uci get wireless.wl0.radio)" == "off" ] && {
                        uci set wireless.wl0.radio=on
                        printf "\n\nEnabling Wi-Fi\n\n" > /dev/console
                        wlctl -i wl0 up
                        ubus call led.wifi set '{ "state": "ok"}'
                } || {
                        uci set wireless.wl0.radio=off
                        printf "\n\nDisabling Wi-Fi\n\n" > /dev/console

                        ubus call led.wifi set '{ "state": "off"}'
                }
                uci commit wireless
        }
        [ "wpsbutton" == "$INTERFACE" ] && {
		printf "\n\nWPS button pressed\n\n" > /dev/console
		[ $(grep wps_pbc /etc/config/wireless | grep -c '1') -ge 1 ] && touch /var/wps_btn_pressed
        }
        [ "dectbutton" == "$INTERFACE" ] && {
                printf "\n\nRegistering DECT\n\n" > /dev/console
                local parsed=$(ubus call led.dect status)
                json_load "$parsed"
                json_get_var ledstate state

                [ "$ledstate" == "off" ] && {
                        ubus call led.dect set '{ "state": "notice"}'
                } || {
                        ubus call led.dect set '{ "state": "off"}'
                }
                echo $ledstate
        }
        [ "infobutton" == "$INTERFACE" ] && {
                printf "\n\nINFO button is pressed\n\n" > /dev/console
                local parsed=$(ubus call leds status)
                json_load "$parsed"
                json_get_var ledstate state

                [ "$ledstate" == "normal" ] && {
                        ubus call leds set '{ "state": "info"}'
                } || {
                        ubus call leds set '{ "state": "normal"}'
                }
        }
        ;;
        remove|unregister)
        ;;
esac
